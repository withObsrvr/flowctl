apiVersion: v1
kind: Pipeline
metadata:
  name: local-test-pipeline
  labels:
    environment: local
    execution: process
spec:
  description: Test pipeline for local execution with embedded control plane
  sources:
    - id: stellar-source
      type: stellar-live-source-datalake
      command:
        - /home/tillman/Documents/ttp-processor-demo/stellar-live-source-datalake/stellar_live_source_datalake
        - --local
        - --test-mode
      env:
        STORAGE_TYPE: LOCAL
        DATA_PATH: ./test-data
        LEDGERS_PER_FILE: "1"
        FILES_PER_PARTITION: "10"
        FLOWCTL_SERVICE_TYPE: source
      ports:
        - name: grpc
          containerPort: 50052
          protocol: TCP
        - name: health
          containerPort: 8080
          protocol: TCP
      healthCheck: /health
      healthPort: 8080
      outputEventTypes:
        - stellar.ledger
        - stellar.transaction

  processors:
    - id: ttp-processor
      type: ttp-processor
      command:
        - /home/tillman/Documents/ttp-processor-demo/ttp_processor_server
        - --local
      inputs:
        - stellar-source
      inputEventTypes:
        - stellar.ledger
        - stellar.transaction
      outputEventTypes:
        - stellar.token_transfer
      env:
        SOURCE_SERVICE_ADDRESS: localhost:50052
        NETWORK_PASSPHRASE: Test SDF Network ; September 2015
        HEALTH_PORT: "8089"
        FLOWCTL_SERVICE_TYPE: processor
      ports:
        - name: grpc
          containerPort: 50053
          protocol: TCP
        - name: health
          containerPort: 8089
          protocol: TCP
      healthCheck: /health

  sinks:
    - id: demo-consumer
      type: consumer-app
      command:
        - node
        - index.js
        - --source
        - localhost:50053
        - --range
        - "409907"
        - "409948"
      inputs:
        - ttp-processor
      inputEventTypes:
        - stellar.token_transfer
      env:
        FLOWCTL_SERVICE_TYPE: sink
      ports:
        - name: http
          containerPort: 3000
          protocol: TCP
      healthCheck: /health
      healthPort: 3000