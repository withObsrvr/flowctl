apiVersion: flowctl/v1
kind: Pipeline
metadata:
  name: docker-pipeline
  namespace: production
  labels:
    environment: docker
    purpose: example
  annotations:
    description: "Example pipeline designed for Docker orchestration"

spec:
  description: "Pipeline demonstrating Docker orchestration with realistic components"
  driver: docker
  
  sources:
    - id: event-generator
      type: source
      image: alpine:latest
      command: ["sh", "-c"]
      args: |
        while true; do 
          echo "{
            \"event_id\": \"evt_$(date +%s)\",
            \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",
            \"type\": \"transaction\",
            \"amount\": $((RANDOM % 1000 + 1)),
            \"currency\": \"USD\"
          }"
          sleep 2
        done
      env:
        EVENT_TYPE: "transaction"
        RATE_LIMIT: "30"
  
  processors:
    - id: event-validator
      type: processor
      image: alpine:latest
      command: ["sh", "-c"]
      args: |
        while read event; do
          # Simple validation - check if event has required fields
          if echo "$event" | grep -q "event_id" && echo "$event" | grep -q "amount"; then
            echo "$event" | sed 's/}/, "validated": true}/'
          else
            echo "$event" | sed 's/}/, "validated": false, "error": "missing required fields"}/'
          fi
        done
      inputs: ["event-generator"]
    
    - id: event-enricher
      type: processor
      image: alpine:latest
      command: ["sh", "-c"]
      args: |
        while read event; do
          # Add enrichment data
          echo "$event" | sed 's/}/, "processed_at": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'", "processor": "enricher-v1"}/'
        done
      inputs: ["event-validator"]
      replicas: 2  # Scale for performance
  
  sinks:
    - id: log-sink
      type: sink
      image: alpine:latest
      command: ["sh", "-c"]
      args: |
        while read event; do
          echo "[SINK] Received event: $event"
          # In real scenario, this would write to database/queue
        done
      inputs: ["event-enricher"]
      env:
        OUTPUT_FORMAT: "json"
        BATCH_SIZE: "10"