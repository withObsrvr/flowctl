apiVersion: flowctl.io/v1alpha1
kind: QuickstartPipeline
metadata:
  name: stellar-asset-balance-indexer
  description: Index Stellar account balances for specific assets

spec:
  # Data source configuration
  source:
    type: stellar-live-source-datalake  # Component type
    network: testnet  # or "mainnet"
    storage:
      type: gcs
      bucket: obsrvr-stellar-ledger-data-testnet-data  # auto-selected based on network
      path: landing/ledgers/testnet  # auto-selected based on network

    # Ledger range to process
    ledgers:
      start: 3
      end: 10000  # or 0 for continuous streaming

  # Asset filter configuration
  filters:
    # Filter by specific assets (omit to index all assets)
    assets:
      - code: USDC
        issuer: GBBD47IF6LWK7P7MDEVSCWR7DPUWV3NY3DTQEVFL4NAT4AQH3ZLLFLA5
        description: "Circle USDC on testnet"

      # Uncomment to add more assets:
      # - code: AQUA
      #   issuer: GBNZILSTVQZ4R7IKQDGHYGY2QXL5QOFJYQMXPKWRRM5PAV7Y4M67AQUA
      #   description: "Aquarius token"

    # Or filter by asset code only (any issuer)
    # assetCodeOnly:
    #   - USDC
    #   - AQUA

    # Or no filter at all (index everything)
    # indexAll: true

  # Processor configuration
  processor:
    type: account-balance          # Component type (account-balance, payment, operation, etc.)

    # Performance tuning
    batchSize: 5000  # balances per batch (default: 5000)

    # Component settings
    grpcPort: 50054
    healthPort: 8089

  # Consumer (DuckDB) configuration
  consumer:
    type: duckdb                   # Component type (duckdb, postgresql, clickhouse, etc.)

    database:
      path: ./account_balances.duckdb

      # Optional: Configure table behavior
      table:
        name: account_balances
        # upsertMode: latest  # Keep latest balance per account/asset

    # Performance tuning
    batchSize: 5000  # same as processor for optimal flow

    # Component settings
    healthPort: 8090

  # Optional: Observability
  observability:
    # Health checks
    healthChecks:
      enabled: true
      interval: 30s

    # Metrics (future)
    # metrics:
    #   enabled: true
    #   port: 9090
    #   format: prometheus
