apiVersion: flowctl/v1
kind: Pipeline
metadata:
  name: cdp-pipeline-orchestrator
  namespace: stellar
  labels:
    pipeline: cdp
    network: mainnet
    type: orchestrator
  annotations:
    description: "Orchestrates multiple CDP pipelines as black-box components"

spec:
  description: "Demonstrates pipeline-as-component feature by running complete CDP pipelines"
  driver: docker
  
  # No traditional sources/sinks needed - using pipeline components
  sources: []
  sinks: []
  
  # Complete pipelines running as independent components
  pipelines:
    - id: contract-events-pipeline
      type: pipeline
      image: docker.io/withobsrvr/obsrvr-flow-pipeline:0.1.20
      command: ["/app/cdp-pipeline-workflow", "run"]
      args: ["/app/config/base/contract_events.secret.yaml"]
      env:
        GOOGLE_APPLICATION_CREDENTIALS: "/.config/gcp/credentials.json"
        PIPELINE_MODE: "contract_events"
        LOG_LEVEL: "info"
      volumes:
        # Mount GCP credentials
        - name: gcp-credentials
          host_path: "$HOME/.config/gcloud/application_default_credentials.json"
          container_path: "/.config/gcp/credentials.json"
          readonly: true
        # Mount configuration
        - name: config
          host_path: "$PWD/config"
          container_path: "/app/config"
      restart_policy: "no"  # Run once and exit
      resources:
        requests:
          cpu: "500m"
          memory: "512Mi"
        limits:
          cpu: "2000m"
          memory: "2Gi"
    
    - id: latest-ledger-pipeline
      type: pipeline
      image: docker.io/withobsrvr/obsrvr-flow-pipeline:0.1.20
      command: ["/app/cdp-pipeline-workflow", "run"]
      args: ["/app/config/base/latest_ledger_gcs.secret.yaml"]
      env:
        GOOGLE_APPLICATION_CREDENTIALS: "/.config/gcp/credentials.json"
        PIPELINE_MODE: "latest_ledger"
        LOG_LEVEL: "info"
        # Example of passing configuration via environment
        START_LEDGER: "48000000"
        END_LEDGER: "48001000"
      volumes:
        # Reuse the same credential mount
        - name: gcp-credentials
          host_path: "$HOME/.config/gcloud/application_default_credentials.json"
          container_path: "/.config/gcp/credentials.json"
          readonly: true
        - name: config
          host_path: "$PWD/config"
          container_path: "/app/config"
      restart_policy: "no"
      # This pipeline depends on contract events completing first
      depends_on: ["contract-events-pipeline"]
    
    - id: analytics-pipeline
      type: pipeline
      image: docker.io/withobsrvr/obsrvr-flow-pipeline:0.1.20
      command: ["/app/cdp-pipeline-workflow", "run"]
      args: ["/app/config/base/analytics.secret.yaml"]
      env:
        GOOGLE_APPLICATION_CREDENTIALS: "/.config/gcp/credentials.json"
        PIPELINE_MODE: "analytics"
        LOG_LEVEL: "debug"
        # Analytics runs after both data pipelines complete
      volumes:
        - name: gcp-credentials
          host_path: "$HOME/.config/gcloud/application_default_credentials.json"
          container_path: "/.config/gcp/credentials.json"
          readonly: true
        - name: config
          host_path: "$PWD/config"
          container_path: "/app/config"
        # Additional volume for analytics output
        - name: output
          host_path: "$PWD/output"
          container_path: "/app/output"
      restart_policy: "on-failure"  # Retry on failure
      depends_on: 
        - "contract-events-pipeline"
        - "latest-ledger-pipeline"