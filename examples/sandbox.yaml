apiVersion: flowctl/v1
kind: SandboxServices
metadata:
  name: flowctl-sandbox
  namespace: sandbox
spec:
  services:
    # Redis for event streaming and caching
    - name: redis
      image: redis:7-alpine
      ports:
        - 6379:6379
      environment:
        REDIS_PASSWORD: ""
      volumes:
        - redis-data:/data
      healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 5s
        retries: 3

    # Kafka for message queuing
    - name: kafka
      image: confluentinc/cp-kafka:7.5.0
      ports:
        - 9092:9092
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      depends_on:
        - zookeeper
      healthcheck:
        test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
        interval: 10s
        retries: 5

    # Zookeeper for Kafka
    - name: zookeeper
      image: confluentinc/cp-zookeeper:7.5.0
      ports:
        - 2181:2181
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      volumes:
        - zookeeper-data:/var/lib/zookeeper/data
        - zookeeper-logs:/var/lib/zookeeper/log

    # PostgreSQL for data storage
    - name: postgres
      image: postgres:15-alpine
      ports:
        - 5432:5432
      environment:
        POSTGRES_USER: flowctl
        POSTGRES_PASSWORD: flowctl
        POSTGRES_DB: flowctl
      volumes:
        - postgres-data:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U flowctl"]
        interval: 5s
        retries: 3

    # Prometheus for metrics collection
    - name: prometheus
      image: prom/prometheus:latest
      ports:
        - 9090:9090
      volumes:
        - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
        - prometheus-data:/prometheus
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.enable-lifecycle'

    # Prometheus Pushgateway for batch metrics
    - name: pushgateway
      image: prom/pushgateway:latest
      ports:
        - 9091:9091

    # Grafana for visualization
    - name: grafana
      image: grafana/grafana:latest
      ports:
        - 3000:3000
      environment:
        GF_SECURITY_ADMIN_USER: admin
        GF_SECURITY_ADMIN_PASSWORD: admin
        GF_USERS_ALLOW_SIGN_UP: false
      volumes:
        - grafana-data:/var/lib/grafana
      depends_on:
        - prometheus

  volumes:
    redis-data:
      driver: local
    zookeeper-data:
      driver: local
    zookeeper-logs:
      driver: local
    postgres-data:
      driver: local
    prometheus-data:
      driver: local
    grafana-data:
      driver: local

  networks:
    default:
      name: sandbox_net
      driver: bridge